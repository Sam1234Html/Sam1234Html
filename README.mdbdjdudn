# MERN Bug Tracker Application

This project is a simple MERN (MongoDB, Express.js, React, Node.js) stack application designed to track bugs. It demonstrates a systematic approach to testing and debugging, including unit, integration, and component tests, as well as robust error handling and various debugging techniques.

## Features

* **Report New Bugs:** Users can submit new bug reports with a title, description, status, and priority.
* **View Bugs:** A list of all reported bugs is displayed.
* **Update Bug Status:** Users can change the status of existing bugs (e.g., 'open', 'in-progress', 'resolved').
* **Delete Bugs:** Bugs can be permanently removed from the system.

## Project Setup and Installation

**Prerequisites:**

* Node.js (LTS version recommended)
* npm (Node Package Manager) or Yarn
* MongoDB instance (local or a cloud service like MongoDB Atlas)

**Steps:**

1.  **Clone the repository:**
    ```bash
    git clone <your-repo-url>
    cd mern-bug-tracker
    ```

2.  **Backend Setup:**
    ```bash
    cd backend
    npm install
    ```
    Create a `.env` file in the `backend` directory and add your MongoDB URI and port:
    ```
    MONGO_URI=mongodb://localhost:27017/bugtracker_test_db # Use a dedicated test DB for local development
    PORT=5000
    NODE_ENV=development
    ```
    (Replace `mongodb://localhost:27017/bugtracker_test_db` with your MongoDB Atlas connection string if using a cloud MongoDB instance.)

    **Run Backend:**
    ```bash
    npm run dev  # For development with nodemon (auto-restarts on file changes)
    # or
    npm start    # For production
    ```
    The backend server will typically run on `http://localhost:5000`.

3.  **Frontend Setup:**
    ```bash
    cd ../frontend
    npm install
    ```
    Ensure your `src/services/bugService.js` is configured to point to your backend API URL (e.g., `http://localhost:5000/api/bugs`).

    **Run Frontend:**
    ```bash
    npm start
    ```
    The React application will open in your default browser, typically at `http://localhost:3000`.

## Running Tests

### Backend Tests

Navigate to the `backend` directory and run:
```bash
cd backend
npm test
