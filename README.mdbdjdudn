<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSS Animation and Local Storage</title>
    <style>
        .animated-button {
            background-color: #ffc107; /* Amber */
            color: #212529; /* Dark gray */
            padding: 12px 25px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 18px;
            transition: background-color 0.3s ease;
        }

        .animated-button:hover {
            background-color: #e0a800; /* Darker amber */
        }

        .animated-button.shake {
            animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
        }

        @keyframes shake {
            10%, 90% {
                transform: translate3d(-1px, 0, 0);
            }

            20%, 80% {
                transform: translate3d(2px, 0, 0);
            }

            30%, 50%, 70% {
                transform: translate3d(-4px, 0, 0);
            }

            40%, 60% {
                transform: translate3d(4px, 0, 0);
            }
        }
    </style>
</head>
<body>

    <button id="shakeButton" class="animated-button">Shake Me!</button>

    <script>
        const shakeButton = document.getElementById('shakeButton');
        const shakePreferenceKey = 'shakeAnimationTriggered';

        // Function to store user preference in localStorage
        function storePreference(key, value) {
            localStorage.setItem(key, JSON.stringify(value));
        }

        // Function to retrieve user preference from localStorage
        function getPreference(key) {
            const storedValue = localStorage.getItem(key);
            return storedValue ? JSON.parse(storedValue) : null;
        }

        // Function to trigger the shake animation and store the preference
        function triggerShakeAnimation() {
            shakeButton.classList.add('shake');
            storePreference(shakePreferenceKey, true);

            // Remove the class after the animation duration to allow re-triggering
            setTimeout(() => {
                shakeButton.classList.remove('shake');
            }, 500); // Matches the animation duration
        }

        // Check if the shake animation was triggered previously (optional: can be used to set an initial state)
        const wasShakeTriggered = getPreference(shakePreferenceKey);
        if (wasShakeTriggered) {
            // Optionally apply some initial styling or state if the animation was triggered before
            console.log("Shake animation was triggered in a previous session.");
        }

        // Event listener to trigger the animation on button click
        shakeButton.addEventListener('click', triggerShakeAnimation);
    </script>

</body>
</html>
